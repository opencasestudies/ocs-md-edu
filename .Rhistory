distplot <- function(data, var, var.name){
p <- ggplot(data, aes(x = reorder(county, var),
y = var, fill = county)) + geom_boxplot()+
guides(fill = FALSE) + theme_bw() +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1,vjust = 0.5))+
labs( y = paste("Distribution of ", var.name),
caption = deparse(substitute(data)))
# specify differenct variables and datasets used here
return(p)
}
p3 <- distplot(df_ALG1, df_ALG1$pro, "pro")
p4 <- distplot(df_ALG2, df_ALG2$pro, "pro")
p5 <- distplot(df_ELA, df_ELA$pro, "pro")
ggarrange(p3, p4, p5, nrow = 2, ncol = 2)
p6 <- distplot(df_ALG1, df_ALG1$grad.rate, "grad.rate")
p7 <- distplot(df_ALG1, df_ALG1$farms, "farms")
p8 <- distplot(df_ALG1, df_ALG1$withdraw, "withdraw")
p9 <- distplot(df_ALG1, df_ALG1$exp, "exp")
ggarrange(p6,p7, p8, p9, nrow = 2, ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate( grad.rate.ct = grad.rate - mean(grad.rate, na.rm = TRUE)) %>%
mutate( withdraw.ct = withdraw - mean(withdraw, na.rm = TRUE))
df_ALG1 <- df_ALG1 %>%
mutate( grad.rate.ct = grad.rate - mean(grad.rate, na.rm = TRUE)) %>%
mutate( withdraw.ct = withdraw - mean(withdraw, na.rm = TRUE))
relaplot1 <- function(var, var.name){
p <- ggplot(df_ALG1, aes(x = var, y = pro))+
geom_point()+ geom_smooth(se = FALSE)+
theme(legend.position = "none") +
labs(x = var.name)
return(p)
}
relaplot2 <- function(var, var.name){
p <- ggplot(data = df_ALG1, aes(x = var , y = pro,group = county))+
facet_wrap( ~ county, switch = 'x', nrow = 3)+
geom_point(aes(colour = county))+
geom_smooth(se = FALSE, aes(colour = county))+
theme(legend.position = "none") +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(x = var.name)
return(p)
}
p10 <- relaplot1(df_ALG1$farms, "farms")
p11 <- relaplot2(df_ALG1$farms, "farms")
p12 <- relaplot1(df_ALG1$grad.rate.ct, "grad.rate.ct")
p13 <- relaplot2(df_ALG1$grad.rate.ct, "grad.rate.ct")
ggarrange(p10,p11,p12,p13,
ncol = 2, nrow = 2, widths = c(3,6))
df_ALG1 <- df_ALG1 %>%
mutate(grad.temp1 = log(grad.rate)) %>%
mutate(grad.temp2 = log(-grad.rate+100)) %>%
mutate(grad.temp3 = log(grad.rate.ct + 100)) %>%
mutate( grad.temp4 = ifelse(grad.rate.ct > 0, log(grad.rate.ct),
-log(-(grad.rate.ct))))
#mutate( withdraw.log = ifelse(withdraw.ct > 0, log(withdraw.ct),
#                      -log(-(withdraw.ct))))
p14 <- relaplot1(df_ALG1$grad.temp1, "temp1 grad.rate")
p15 <- relaplot1(df_ALG1$grad.temp2, "temp2 grad.rate")
p16 <- relaplot1(df_ALG1$grad.temp3, "temp3 grad.rate")
p17 <- relaplot1(df_ALG1$grad.temp4, "temp4 grad.rate")
ggarrange(p14,p15,p16,p17, ncol = 2, nrow = 2)
summary(df_ALG1$grad.rate.ct)
summary(df_ALG1$grad.rate.ct)
df_ALG1 <- df_ALG1 %>%
mutate(grad.temp1 = log(grad.rate)) %>%
mutate(grad.temp2 = log(-grad.rate+100)) %>%
mutate(grad.temp3 = log(grad.rate.ct + 85)) %>%
mutate( grad.temp4 = ifelse(grad.rate.ct > 0, log(grad.rate.ct),
-log(-(grad.rate.ct))))
#mutate( withdraw.log = ifelse(withdraw.ct > 0, log(withdraw.ct),
#                      -log(-(withdraw.ct))))
p14 <- relaplot1(df_ALG1$grad.temp1, "temp1 grad.rate")
p15 <- relaplot1(df_ALG1$grad.temp2, "temp2 grad.rate")
p16 <- relaplot1(df_ALG1$grad.temp3, "temp3 grad.rate")
p17 <- relaplot1(df_ALG1$grad.temp4, "temp4 grad.rate")
ggarrange(p14,p15,p16,p17, ncol = 2, nrow = 2)
summary(df_ALG1$grad.rate.ct)
df_ALG1 <- df_ALG1 %>%
mutate(grad.temp1 = log(grad.rate)) %>%
mutate(grad.temp2 = log(-grad.rate+100)) %>%
mutate( grad.temp3 = grad.rate.ct^(1/3)) %>%
mutate( grad.temp4 = ifelse(grad.rate.ct > 0, log(grad.rate.ct),
-log(-(grad.rate.ct))))
#mutate( withdraw.log = ifelse(withdraw.ct > 0, log(withdraw.ct),
#                      -log(-(withdraw.ct))))
p14 <- relaplot1(df_ALG1$grad.temp1, "temp1 grad.rate")
p15 <- relaplot1(df_ALG1$grad.temp2, "temp2 grad.rate")
p16 <- relaplot1(df_ALG1$grad.temp3, "temp3 grad.rate")
p17 <- relaplot1(df_ALG1$grad.temp4, "temp4 grad.rate")
ggarrange(p14,p15,p16,p17, ncol = 2, nrow = 2)
df_ALG1$grad.temp3
summary(df_ALG1$grad.rate.ct)
df_ALG1 <- df_ALG1 %>%
mutate(grad.temp1 = log(grad.rate)) %>%
mutate(grad.temp2 = log(-grad.rate+100)) %>%
mutate( grad.temp3 = ifelse(grad.rate.ct > 0,grad.rate.ct^(1/3),
-abs(grad.rate.ct)^(1/3)) %>%
mutate( grad.temp4 = ifelse(grad.rate.ct > 0, log(grad.rate.ct),
-log(-(grad.rate.ct))))
#mutate( withdraw.log = ifelse(withdraw.ct > 0, log(withdraw.ct),
#                      -log(-(withdraw.ct))))
p14 <- relaplot1(df_ALG1$grad.temp1, "temp1 grad.rate")
summary(df_ALG1$grad.rate.ct)
df_ALG1 <- df_ALG1 %>%
mutate(grad.temp1 = log(grad.rate)) %>%
mutate(grad.temp2 = log(-grad.rate+100)) %>%
mutate( grad.temp3 = ifelse(grad.rate.ct > 0,grad.rate.ct^(1/3),
-abs(grad.rate.ct)^(1/3)) )%>%
mutate( grad.temp4 = ifelse(grad.rate.ct > 0, log(grad.rate.ct),
-log(-(grad.rate.ct))))
#mutate( withdraw.log = ifelse(withdraw.ct > 0, log(withdraw.ct),
#                      -log(-(withdraw.ct))))
p14 <- relaplot1(df_ALG1$grad.temp1, "temp1 grad.rate")
p15 <- relaplot1(df_ALG1$grad.temp2, "temp2 grad.rate")
p16 <- relaplot1(df_ALG1$grad.temp3, "temp3 grad.rate")
p17 <- relaplot1(df_ALG1$grad.temp4, "temp4 grad.rate")
ggarrange(p14,p15,p16,p17, ncol = 2, nrow = 2)
df_ALG1$grad.temp3
summary(df_ALG1$grad.rate.ct)
df_ALG1 <- df_ALG1 %>%
mutate(grad.temp1 = log(grad.rate)) %>%
mutate(grad.temp2 = log(-grad.rate+100)) %>%
mutate( grad.temp3 = ifelse(grad.rate.ct > 0,grad.rate.ct^(1/3),
-abs(grad.rate.ct)^(1/3)) )%>%
mutate( grad.temp4 = ifelse(grad.rate.ct > 0, log(grad.rate.ct),
-log(-(grad.rate.ct))))
#mutate( withdraw.log = ifelse(withdraw.ct > 0, log(withdraw.ct),
#                      -log(-(withdraw.ct))))
p14 <- relaplot1(df_ALG1$grad.temp1, "temp1 grad.rate")
p15 <- relaplot1(df_ALG1$grad.temp2, "temp2 grad.rate")
p16 <- relaplot1(df_ALG1$grad.temp3, "temp3 grad.rate")
p17 <- relaplot1(df_ALG1$grad.temp4, "temp4 grad.rate")
ggarrange(p14,p15,p16,p17, ncol = 2, nrow = 2)
func_merge <- function(data){
L <- list(data[, c('id', 'county', 'pro')],
df_grad[, c('id','grad.rate')],
df_mob[, c('id','withdraw')],
df_spc[, c('id','farms')], df_exp)
final_data<- Reduce(function(x,y) left_join(x, y,
by = colnames(y)[1]), L)
return(final_data)
}
df_ELA <- func_merge(df_ela)
df_ALG1 <- func_merge(df_alg1)
df_ALG2 <- func_merge(df_alg2)
p10 <- relaplot1(df_ALG1$farms, "farms")
p11 <- relaplot2(df_ALG1$farms, "farms")
p12 <- relaplot1(df_ALG1$grad.rate, "grad.rate.ct")
p13 <- relaplot2(df_ALG1$grad.rate, "grad.rate.ct")
ggarrange(p10,p11,p12,p13,
ncol = 2, nrow = 2, widths = c(3,6))
p10 <- relaplot1(df_ALG1$farms, "farms")
p11 <- relaplot2(df_ALG1$farms, "farms")
p12 <- relaplot1(df_ALG1$grad.rate, "grad.rate")
p13 <- relaplot2(df_ALG1$grad.rate, "grad.rate")
ggarrange(p10,p11,p12,p13,
ncol = 2, nrow = 2, widths = c(3,6))
df_ALG1 <- df_ALG1 %>%
mutate(grad.rate.log = log(grad.rate)) %>%
mutate( withdraw.log = log(withdraw))
p14 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
p15 <- relaplot1(df_ALG1$withdraw, "log withdraw")
ggarrange(p14,p15, ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(grad.rate.log = log(grad.rate)) %>%
mutate( withdraw.log = log(withdraw))
p14 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
p15 <- relaplot1(df_ALG1$withdraw.log, "log withdraw")
ggarrange(p14,p15, ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(grad.rate.log = log(grad.rate)) %>%
mutate( withdraw.log = log(withdraw))
p14 <- relaplot1(df_ALG1$grad.rate, " grad.rate")
p15 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
p16 <- relaplot1(df_ALG1$withdraw, " withdraw")
p17 <- relaplot1(df_ALG1$withdraw.log, "log withdraw")
ggarrange(p14,p15,p16,p17,
ncol = 2, nrow = 2)
df_ALG1 <- df_ALG1 %>%
mutate(grad.rate.log = log(grad.rate)) %>%
mutate( withdraw.log = log(withdraw))
p14 <- relaplot1(df_ALG1$grad.rate, " grad.rate")
p15 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
p16 <- relaplot1(df_ALG1$withdraw, " withdraw")
p17 <- relaplot1(df_ALG1$withdraw.log, "log withdraw")
ggarrange(p14,p15,p16,p17,
ncol = 2, nrow = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$grad.rate, " grad.rate")
p19 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
ggarrange(p18,p19,ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$grad.rate.log, " log grad.rate")
p19 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p18,p19,ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$grad.rate.log, " log grad.rate")
p19 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p18,p19,ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(grad.rate.log = log(grad.rate)) %>%
mutate( withdraw.log = log(withdraw))
p14 <- relaplot1(df_ALG1$grad.rate, " grad.rate")
p15 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
p16 <- relaplot1(df_ALG1$withdraw, " withdraw")
p17 <- relaplot1(df_ALG1$withdraw.log, "log withdraw")
ggarrange(p14,p15,p16,p17,
ncol = 2, nrow = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$grad.rate.log, " log grad.rate")
p19 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p18,p19,ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p15,p18,ncol = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p14,p15,p18,ncol = 3)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p14,p15,p18,ncol = 3)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p14,p15,p18,ncol = 3)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p14,p15,p18,ncol = 3)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE)
library(kableExtra)
library(tidyverse)
library(dplyr)
library(ggpubr)
library(lattice)
library(lme4)
files = list.files(path='./Data',pattern="*.csv")
files
filePaths = paste0("./Data/", files)
filePaths
data <- lapply(filePaths, read_csv)
data
data[[1]]
names(data[[1]])
make.names(names(data[[1]]))
for (i in 1:5) {
names(data[[i]]) <- make.names(names(data[[i]]))
data[[i]] <- mutate_if(data[[i]], is.character, as.factor)
}
dim(data[[1]])
df_grad <- data[[1]] %>%
filter(School.Number != 'A',
Cohort == '4-year adjusted cohort') %>%
select(county=LEA.Name, sch.num=School.Number,
sch=School.Name, grad.rate=Grad.Rate)
summary(df_grad[, c('sch', 'grad.rate')])
df_grad$grad.rate<- gsub('<= 5.00','2.5', df_grad$grad.rate)
df_grad$grad.rate <- gsub('>= 95.00','97.5', df_grad$grad.rate)
head(df_grad[df_grad$grad.rate == '*', ])
df_grad$grad.rate <- na_if(df_grad$grad.rate, '*')
df_grad$grad.rate <- as.numeric(df_grad$grad.rate)
summary(df_grad[,c('sch.num', 'sch')])
df_grad <- df_grad %>%
within( id <- paste(county, sch, sep = '-'))
tab <- as.data.frame(table(df_grad$id))
tab[tab$Freq > 1,]
colnames(data[[2]])
df_parcc <- data[[2]] %>%
filter( School.Number != 'A' ) %>%
select(3,4,5,6,9,11,13,15,17)
colnames(df_parcc) <- c('county','sch.num',
'sch', 'subject','L1',
'L2','L3','L4','L5')
df_parcc <- df_parcc %>%
filter(subject %in% c('English/Language Arts Grade 10','Algebra 1','Algebra 2'))
summary(df_parcc[, 5:9])
df_parcc[,5:9] <-
lapply(df_parcc[,5:9], function(x) as.numeric(as.character(x)))
df_parcc$pro <- NA
indx1 <- !is.na(df_parcc$L4) &  !is.na(df_parcc$L5)
df_parcc[indx1, 'pro'] <- rowSums(df_parcc[indx1,8:9])
sum(is.na(df_parcc$pro))
indx2 <- !is.na(df_parcc$L1) &  !is.na(df_parcc$L2) & !is.na(df_parcc$L3)
df_parcc[indx2, 'pro'] <-  100-rowSums(df_parcc[indx2,5:7])
sum(is.na(df_parcc$pro))
indx3 <- is.na(df_parcc$pro)
na_sum <- 100-rowSums(df_parcc[indx3, 5:9], na.rm = TRUE)
n <- rowSums(is.na(df_parcc[indx3, 5:9]))
na <- round(na_sum/n,1)
for (i in 1:length(indx3)){
df_parcc[indx3, 5:9][i,which(is.na(df_parcc[indx3, 5:9][i,]))] <- na[i]
}
df_parcc[indx3, 'pro'] <- rowSums(df_parcc[indx3,8:9])
sum(is.na(df_parcc$pro))
pac <- df_parcc %>%
within( id <- paste(county, sch, sep = '-')) %>%
select(county, sch.num, sch, subject, pro, id)
tail(pac)
pac <- pac %>%
filter( county != 'SEED')
df_ela <- pac[grep("English/Language Arts Grade 10", pac$subject), ]
df_alg1 <- pac[grep("Algebra 1", pac$subject), ]
df_alg2 <- pac[grep("Algebra 2", pac$subject), ]
dim(df_ela)  #size of df_ela
dim(df_alg1) #size of df_alg1
dim(df_alg2) #size of df_alg2
head(df_alg1)
df_alg1 <- df_alg1 %>%
filter(id %in% df_grad$id)
dim(df_alg1)
df_spc <- data[[3]] %>%
filter( School.Number != 'A', School.Type == 'High' ) %>%
within( id <- paste(LEA.Name, School.Name, sep = '-')) %>%
select(LEA.Name, School.Number, School.Name,
FARMS.Pct, id)
colnames(df_spc) <- c('county', 'sch.num', 'sch', 'farms', 'id')
summary(df_spc)
df_spc[df_spc$farms == '*',]
df_spc$farms <- gsub('<= 5.0','2.5', df_spc$farms)
df_spc$farms <- as.numeric(df_spc$farms)
df_mob <- data[[4]] %>%
filter( School.Number != 'A', School.Type == 'High' )%>%
within( id <- paste(LEA.Name, School.Name, sep = '-')) %>%
select(LEA.Name, School.Number,
School.Name, Withdrawals.Pct, id)
colnames(df_mob) <- c('county', 'sch.num', 'sch', 'withdraw', 'id')
summary(df_mob)
df_mob$withdraw <- gsub('<= 5.0','2.5', df_mob$withdraw)
df_mob$withdraw <- gsub('>= 95.0','97.5', df_mob$withdraw)
df_mob$withdraw <- as.numeric(df_mob$withdraw)
df_exp <- data[[5]] %>%
mutate(exp = round(Wealth.Per.Pupil/Expenditures.Per.Pupil, 1)) %>%
select(LEA.Name, exp)
colnames(df_exp) <- c('county','exp')
temp <- df_ela %>%
select(id, county, pro) %>%
left_join(df_grad[, c('grad.rate', 'id')], by = 'id')
head(temp)
tail(temp)
temp1 <- df_ela %>%
select(id, county, pro) %>%
left_join(df_grad[, c('grad.rate', 'id')], by = 'id') %>%
left_join( df_mob[, c('withdraw', 'id')], by = 'id') %>%
left_join( df_spc[, c('farms', 'id')], by = 'id') %>%
left_join(df_exp, by = 'county')
L_ela <- list(df_ela[, c('id', 'county', 'pro')],
df_grad[, c('id','grad.rate')],
df_mob[, c('id','withdraw')],
df_spc[, c('id','farms')], df_exp)
temp2 <- Reduce(function(x,y) left_join(x, y,
by = colnames(y)[1]), L_ela)
# `by = colnames(y)[1])` tells how to find the *keys* in each left_join.
func_merge <- function(data){
L <- list(data[, c('id', 'county', 'pro')],
df_grad[, c('id','grad.rate')],
df_mob[, c('id','withdraw')],
df_spc[, c('id','farms')], df_exp)
final_data<- Reduce(function(x,y) left_join(x, y,
by = colnames(y)[1]), L)
return(final_data)
}
df_ELA <- func_merge(df_ela)
df_ALG1 <- func_merge(df_alg1)
df_ALG2 <- func_merge(df_alg2)
# Boxplot
p1 <- ggplot(df_ALG1, aes(x = reorder(county, pro),
y = pro,fill = county)) + geom_boxplot()+
guides(fill = FALSE) + theme_bw() +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1,vjust = 0.5)) +
labs( y = 'Distribution',
caption = 'proportion of high performance for Algebra 1 in year 2017')
ALG1_sum <- df_ALG1 %>%
group_by(county) %>%
summarise(mean = mean(pro),
sd = sd(pro))
# Line plot
p2 <- ggplot(ALG1_sum, aes( reorder(factor(county), mean), mean, group = 1)) +
geom_line(alpha = 1/3) + theme_bw()+
geom_pointrange(aes(ymax = mean + sd, ymin = mean - sd)) +
labs(caption = 'Error bars') +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1,vjust = 0.5))
ggarrange(p1, p2, ncol = 2)
distplot <- function(data, var, var.name){
p <- ggplot(data, aes(x = reorder(county, var),
y = var, fill = county)) + geom_boxplot()+
guides(fill = FALSE) + theme_bw() +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1,vjust = 0.5))+
labs( y = paste("Distribution of ", var.name),
caption = deparse(substitute(data)))
# specify differenct variables and datasets used here
return(p)
}
p3 <- distplot(df_ALG1, df_ALG1$pro, "pro")
p4 <- distplot(df_ALG2, df_ALG2$pro, "pro")
p5 <- distplot(df_ELA, df_ELA$pro, "pro")
ggarrange(p3, p4, p5, nrow = 2, ncol = 2)
p6 <- distplot(df_ALG1, df_ALG1$grad.rate, "grad.rate")
p7 <- distplot(df_ALG1, df_ALG1$farms, "farms")
p8 <- distplot(df_ALG1, df_ALG1$withdraw, "withdraw")
p9 <- distplot(df_ALG1, df_ALG1$exp, "exp")
ggarrange(p6,p7, p8, p9, nrow = 2, ncol = 2)
relaplot1 <- function(var, var.name){
p <- ggplot(df_ALG1, aes(x = var, y = pro))+
geom_point()+ geom_smooth(se = FALSE)+
theme(legend.position = "none") +
labs(x = var.name)
return(p)
}
relaplot2 <- function(var, var.name){
p <- ggplot(data = df_ALG1, aes(x = var , y = pro,group = county))+
facet_wrap( ~ county, switch = 'x', nrow = 3)+
geom_point(aes(colour = county))+
geom_smooth(se = FALSE, aes(colour = county))+
theme(legend.position = "none") +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(x = var.name)
return(p)
}
p10 <- relaplot1(df_ALG1$farms, "farms")
p11 <- relaplot2(df_ALG1$farms, "farms")
p12 <- relaplot1(df_ALG1$grad.rate, "grad.rate")
p13 <- relaplot2(df_ALG1$grad.rate, "grad.rate")
ggarrange(p10,p11,p12,p13,
ncol = 2, nrow = 2, widths = c(3,6))
df_ALG1 <- df_ALG1 %>%
mutate(grad.rate.log = log(grad.rate)) %>%
mutate( withdraw.log = log(withdraw))
p14 <- relaplot1(df_ALG1$grad.rate, " grad.rate")
p15 <- relaplot1(df_ALG1$grad.rate.log, "log grad.rate")
p16 <- relaplot1(df_ALG1$withdraw, " withdraw")
p17 <- relaplot1(df_ALG1$withdraw.log, "log withdraw")
ggarrange(p14,p15,p16,p17,
ncol = 2, nrow = 2)
df_ALG1 <- df_ALG1 %>%
mutate(non.grad.rate = -grad.rate+100) %>%
mutate( non.grad.rate.log = log(non.grad.rate))
p18 <- relaplot1(df_ALG1$non.grad.rate.log, "log non.grad.rate")
ggarrange(p14,p15,p18,ncol = 3)
m <- lm(pro ~ non.grad.rate.log + withdraw.log + farms + exp, data = df_ALG1)
summary(m)
m1 <- lmer(pro ~ 1 + 1|county, data = df_ALG1)
summary(m1)
m2 <- lmer(pro ~ non.grad.rate.log + (1|county), data = df_ALG1)
summary(m2)
m3 <- lmer(pro ~ non.grad.rate.log + (non.grad.rate.log |county), data = df_ALG1,
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m3)
m4 <- lmer(pro ~ farms+ (1 |county), data = df_ALG1)
summary(m4)
m5 <- lmer(pro ~ farms + (farms |county), data = df_ALG1,
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m5)
library(lmerTest)
m6 <- lmer(pro ~ farms + (farms |county), data = df_ALG1,
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m6)
m7 <- lmer(pro ~ non.grad.rate.log + withdraw.log + farms + exp +
( 1 |county), data = df_ALG1, na.action = 'na.exclude',
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m7)
par(mfrow = c(2, 2))
resi <- resid(m7)
plot(resi, df_ALG1$farms)
plot(resi, df_ALG1$non.grad.rate.log)
plot(resi, df_ALG1$withdraw.log)
plot(resi, df_ALG1$exp)
plot( m7)
qqnorm(resid(m7))
qqline(resid(m7))
m7 <- lmer(pro ~ non.grad.rate.log  + farms + exp +
( 1 |county), data = df_ALG1, na.action = 'na.exclude',
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m7)
m7 <- lmer(pro ~ non.grad.rate.log + withdraw.log + farms +
( 1 |county), data = df_ALG1, na.action = 'na.exclude',
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m7)
m7 <- lmer(pro ~ non.grad.rate.log + withdraw.log + farms + exp +
( 1 |county), data = df_ALG1, na.action = 'na.exclude',
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m7)
m7 <- lmer(pro ~ non.grad.rate.log + farms +
( 1 |county), data = df_ALG1, na.action = 'na.exclude',
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m7)
m7 <- lmer(pro ~ non.grad.rate.log + withdraw.log + farms + exp +
( 1 |county), data = df_ALG1, na.action = 'na.exclude',
control = lmerControl(optimizer ="Nelder_Mead"))
summary(m7)
